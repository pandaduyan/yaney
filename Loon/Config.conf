[General]
switch-node-after-failure-times = 3
disable-stun = true
sni-sniffing = true
fast-switch = true
doh-server = https://223.5.5.5/dns-query,https://1.12.12.12/dns-query
# IPv6 支持
ipv6 = true
# 跳过某个域名或者IP段
skip-proxy = 192.168.0.0/16,172.16.0.0/12,127.0.0.0/8,100.64.0.0/10,17.0.0.0/8,10.0.0.0/8,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS 服务器，如果只在中国大陆境内使用，推荐删除 1.0.0.1 和 8.8.8.8
dns-server = 223.6.6.6,119.29.29.29
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# 网络测试 URL
proxy-test-url = http://www.apple.com/library/test/success.html
# > 测速超时 (s)
test-timeout = 2
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
interface-mode = auto
# 解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/backend/dist/sub-store-parser.loon.min.js
geoip-url = https://raw.githubusercontent.com/du5/geoip/main/GeoLite2-City.mmdb
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
# ssid-trigger="default":rule,"cellular":rule,"ASUS":direct,"TPLINK":proxy 

[Proxy]

#ss
#ss1 = Shadowsocks,example.com,443,aes-128-gcm,"password",fast-open=false,udp=true
#ss2 = Shadowsocks,example2.com,443,chacha20,"password",fast-open=true,udp=true
#ss+simple obfs
#ssObfs1 = Shadowsocks,example.com,80,aes-128-gcm,"password",obfs-name=http,obfs-host=www.micsoft.com,fast-open=true,udp=true
#ssObfs2 = Shadowsocks,example.com,443,aes-128-gcm,"password",obfs-name=tls,obfs-host=www.micsoft.com,fast-open=true,udp=true

#ssr
# 节点名称 = 协议，服务器地址，端口，加密方式，密码，obfs-name，{obfs-params}，protocol-name，{protocols-param}
#ssr1 = ShadowsocksR,example.com,443,aes-256-cfb,"password",orig,{},http_simple,{download.windows.com},fast-open=false,udp=true
#ssr2 = ShadowsocksR,example.com,10076,aes-128-cfb,"password",auth_chain_a,{9555:loon},http_post,{download.windows.com},fast-open=false,udp=true
#ssr3 = ShadowsocksR,example.com,10076,chacha20,"password",auth_aes128_md5,{9555:loon},tls1.2_ticket_auth,{download.windows.com},fast-open=false,udp=true
#ssr4 = ShadowsocksR,example.com,10076,chacha20-ietf,"password",auth_aes128_sha1,{9555:loon},plain,{},fast-open=false,udp=true

#http
#http1 = http,example.com,80
#http2 = http,example.com,80,username,"password"

#https
#https1 = https,example.com,443
#https2 = https,example.com,443,username,"password"
#https3 = https,example.com,443,username,"password",skip-cert-verify:true,tls-name:example.com

#vmess+tcp
# 节点名称 = 协议，服务器地址，端口，加密方式，UUID，传输方式:(tcp/ws),path：websocket握手header中的path，host：websocket握手header中的path，over-tls:是否tls，tls-name：tls名字，skip-cert-verify：是否跳过证书校验（默认否）
#vmess1 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+tcp+tls
#vmess2 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#vmess+ws
#vmess3 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+wss
#vmess4 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true

#trojan
#trojan1 = trojan,example.com,443,"password",skip-cert-verify:false,tls-name:example.com
#trojan2 = trojan,example.com,443,"password",skip-cert-verify:true,tls-name:example.com

[Remote Proxy]
yaney200 = https://raw.githubusercontent.com/yaney01/autoproxy/master/Eternity,parser-enabled = true,udp=false,fast-open=false,vmess-aead=true,enabled=false
yaney = https://gitlab.com/api/v4/projects/39360507/repository/files/data%2Fclash%2Fyaney.yaml/raw?ref=main&private_token=glpat-_xG7s-sYJPRDPgKxAk-c,parser-enabled = true,udp=false,fast-open=false,vmess-aead=true,enabled=false
# 订阅节点，格式：别名 = 订阅 URL
[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# 根据自己机场及想用的节点进行删改，如想过滤 “香港 IPLC”，请修改 FilterKey 为 “.*香港 IPLC”
香港 = NameRegex, FilterKey = "(?i)(香|🇭🇰|HK|Hong Kong)"
台湾 = NameRegex, FilterKey = "(?i)(台|TW|湾|Tai)"
日本 = NameRegex, FilterKey = "(?i)(日本|🇯🇵|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)"
韩国 = NameRegex, FilterKey = "(?i)(KR|🇰🇷|Korea|KOR|首尔|韩|韓|春川)"
美国 = NameRegex, FilterKey = "(?i)(美|🇺🇸|波特兰|达拉斯|俄勒冈|凤凰城|圣何塞|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)"
新加坡 = NameRegex, FilterKey = "(?i)(新加坡|坡|🇸🇬|狮城|SG|Singapore)"

[Proxy Group]
# 节点选项
#PROXY = select,Auto,1,2,3,4,Subs
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
#LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000
# 广告模式
#Advertising = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
#Final = select,PROXY,DIRECT
#自定义
𝐏𝐫𝗼𝐱𝐲 = select,🇰🇷 Oracle KR,🇯🇵 Oracle JP,🇺🇸 Cnservers US,🇨🇦 Oracle CA,🇸🇬 Oracle SG,𝐙𝐞𝐫𝐨 𝐓𝐫𝐮𝐬𝐭,𝐂𝐥𝐨𝐮𝐝𝐅𝐥𝐚𝐫𝐞,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Auto_Speed.png
𝐁𝐢𝐋𝐢𝐁𝐢𝐋𝐢 = select,DIRECT,台湾,香港,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/BiliBili.png
𝐓𝐢𝐤𝐓𝐨𝐤 = select,𝐏𝐫𝗼𝐱𝐲,𝐙𝐞𝐫𝐨 𝐓𝐫𝐮𝐬𝐭,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/TikTok.png
𝐄𝗺𝐛𝐲 = select,DIRECT,𝐏𝐫𝗼𝐱𝐲,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Video.png
𝐇𝐊 = select,香港,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Hong_Kong.png
𝐓𝐖 = select,台湾,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Taiwan.png
𝐉𝐏 = select,日本,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Japan.png
𝐊𝐑 = select,韩国,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/South_Korea.png
𝐒𝐆 = select,新加坡,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/Singapore.png
𝐔𝐒 = select,美国,img-url = https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Rounded_Rectangle/United_States.png

[Rule]
# EMBY添加在此处
DOMAIN-SUFFIX,789.123456.al,𝐄𝗺𝐛𝐲
DOMAIN-KEYWORD,mgl.gay,𝐄𝗺𝐛𝐲
DOMAIN-SUFFIX,sentry.io,𝐏𝐫𝗼𝐱𝐲
# 本地规则
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:force-remote-dns(Default:false),no-resolve
DOMAIN-SUFFIX,local,DIRECT
IP-CIDR,10.0.0.0/8,DIRECT,no-resolve
IP-CIDR,17.0.0.0/8,DIRECT,no-resolve
IP-CIDR,100.64.0.0/10,DIRECT,no-resolve
IP-CIDR,127.0.0.0/8,DIRECT,no-resolve
IP-CIDR,172.16.0.0/12,DIRECT,no-resolve
IP-CIDR,192.168.0.0/16,DIRECT,no-resolve
GEOIP,CN,DIRECT
FINAL,𝐏𝐫𝗼𝐱𝐲

[Remote Rule]
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list, policy=DIRECT, tag=修正, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/BiliBili/BiliBili.list, policy=𝐁𝐢𝐋𝐢𝐁𝐢𝐋𝐢, tag=bilibili, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/OpenAI/OpenAI.list, policy=𝐏𝐫𝗼𝐱𝐲, tag=OpenAI.list, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Bing/Bing.list, policy=𝐏𝐫𝗼𝐱𝐲, tag=bing, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, policy=𝐏𝐫𝗼𝐱𝐲, tag=电报, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Twitter/Twitter.list, policy=𝐏𝐫𝗼𝐱𝐲, tag=推特, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Instagram/Instagram.list, policy=𝐏𝐫𝗼𝐱𝐲, tag=ins, parser-enable=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/GoogleVoice/GoogleVoice.list, policy=𝐏𝐫𝗼𝐱𝐲, tag=gv, parser-enable=true, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Rule/ApplePushNotificationService.list, policy=DIRECT, tag=Apple Push Notification Service, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Rule/AppleID.list, policy=DIRECT, tag=Apple ID, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Rule/AppStore.list, policy=DIRECT, tag=App Store, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, policy=𝐏𝐫𝗼𝐱𝐲, tag=油管, parser-enable=true, enabled=true
https://raw.githubusercontent.com/Semporia/Quantumult-X/master/Filter/TikTok.list, policy=𝐓𝐢𝐤𝐓𝐨𝐤, tag=tiktok, parser-enable=true, enabled=true
https://github.com/Blankwonder/surge-list/raw/master/blocked.list, policy=𝐏𝐫𝗼𝐱𝐲, tag=国外, parser-enable=true, enabled=true
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/beta/ruleset/ASN.China.list, policy=DIRECT, tag=asn, parser-enable=true, enabled=true
https://github.com/Blankwonder/surge-list/raw/master/cn.list, policy=DIRECT, tag=国内, parser-enable=true, enabled=true
# 订阅规则、策略
# PROXY
#https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list,policy=PROXY,enabled=false

[Rewrite]
# 重写规则
enable = true
# Redirect Google Search Service
^https?:\/\/(www.)?(g|google)\.cn 302 https://www.google.com

[Remote Rewrite]
# 订阅 URL Rewrite
# 订阅url,别名(可选)

[Host]
# 可以指定以下四种模式：
# 1. 指定域名使用对应的IP地址
# 2. 将域名指向另一个域名
# 3. 指定域名请求 DNS 时使用特定的 DNS 服务器，格式如下：
## google.com = server:8.8.8.8
## *.baidu.com = server:https://example.com/dns-query
## *.testflight.apple.com = server:8.8.4.4
# 4. 指定具体的 SSID 环境下使用特定的 DNS 服务器，格式如下：
## ssid:Stick = server:system
iosapps.itunes.apple.com = 17.253.85.201
*.taobao.com = server:223.5.5.5
*.tmall.com = server:223.5.5.5
*.alipay.com = server:223.5.5.5
*.alicdn.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
*.jd.com = server:119.28.28.28
*.qq.com = server:119.28.28.28
*.tencent.com = server:119.28.28.28
*.weixin.com = server:119.28.28.28
hdslb.com = server:119.29.29.29
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
*.mi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29

[Script]
enable = true
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本
# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron "0 8 * * *" script-path=cron.js,tag = responseScript,enable=true
http-response ^https?:\/\/(raw|gist)\.githubusercontent.com/.*\.js$ script-path=https://raw.githubusercontent.com/Peng-YM/ScriptConverter/master/js-converter.js, requires-body=true, timeout=10, tag=js-converter.js

[Plugin]
https://raw.githubusercontent.com/DualSubs/YouTube/main/modules/DualSubs.YouTube.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/YouTube_remove_ads.plugin, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, enabled=true
https://raw.githubusercontent.com/BiliUniverse/Global/main/modules/BiliBili.Global.plugin, enabled=true
https://raw.githubusercontent.com/BiliUniverse/ADBlock/main/modules/BiliBili.ADBlock.plugin, enabled=true
https://raw.githubusercontent.com/BiliUniverse/Enhanced/main/modules/BiliBili.Enhanced.plugin, enabled=true
https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/modules/script-hub.loon.plugin, enabled=true
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, policy=𝐏𝐫𝗼𝐱𝐲, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/SpotifyPremium.plugin, enabled=true
https://raw.githubusercontent.com/Semporia/TikTok-Unlock/master/Loon/TikTok-JP.plugin, tag=TikTok JP, enabled=true
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true
https://raw.githubusercontent.com/Peng-YM/Loon-Gallery/master/loon-gallery.plugin, policy=𝐏𝐫𝗼𝐱𝐲, tag=Loon Gallery, enabled=true

[MITM]
# 请在正式使用前将其他已信任证书的 P12 及密码填入下方，并删掉 ca-p12 和 ca-passphrase 前的井号
# 或者前往设置界面生成、安装并信任新证书
hostname = setting.youtube.com:443,*.youtube.com,raw.githubusercontent.com,gist.githubusercontent.com,general.media.dssott.com,boxjs.com,cloudflare.com:443,-*snssdk.com,-*amemv.com,-*.apple.com,-*.icloud.com,-*.mzstatic.com,-*.crashlytics.com,-*.facebook.com,-*.instagram.com,*pstatp.com,app-measurement.com:443,www.google.cn,*.google-analytics.com,*.pstatp.com,api.abema.you,www.g.cn,youtubei.googleapis.com
enable = true
skip-server-cert-verify = true
ca-p12 = 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
ca-passphrase = 0CE83G45
